--- ESTRUCTURA UTILIZANDO MAPEO %ROWTYPE

DECLARE 
  CURSOR CDATOS_PRODUCTO IS 
  SELECT PRODUCTS.PRODUCT_NAME NOMBRE,
  CATEGORIES.CATEGORY_NAME , 
  PRODUCTS.MODEL_YEAR,
  CATEGORIES.CATEGORY_ID 
  FROM PRODUCTS
  INNER JOIN CATEGORIES
  ON PRODUCTS.CATEGORY_ID = CATEGORIES.CATEGORY_ID;
  
  REGISTRO CDATOS_PRODUCTO%ROWTYPE;
BEGIN
  
  OPEN CDATOS_PRODUCTO;
  
  LOOP 
    
    FETCH CDATOS_PRODUCTO INTO REGISTRO;
    
    DBMS_OUTPUT.PUT_LINE('EL  NOMBRE DEL PRODUCTO ES : ' ||REGISTRO.NOMBRE);
    DBMS_OUTPUT.PUT_LINE('EL  ANIO DEL MODELO ES : ' || REGISTRO.MODEL_YEAR);
    DBMS_OUTPUT.PUT_LINE('EL  NOMBRE DE LA CATEGORIA ES : ' || REGISTRO.CATEGORY_NAME);
    DBMS_OUTPUT.PUT_LINE('EL  ID DE LA CATEGORIA ES : ' || REGISTRO.CATEGORY_ID);
    DBMS_OUTPUT.PUT_LINE(CHR(13));---CHR SALTO DE LINEA Y EL 13 ES EL CODIGO DE ASKY DEL VALOR CAMBIO DE LINEA
    
    EXIT WHEN CDATOS_PRODUCTO%NOTFOUND;
    
  END LOOP;
  
  CLOSE CDATOS_PRODUCTO;
END;


---- MAPEO UTILIZANDO UNA ESTRUCTURA DE TIPO RECORD 

DECLARE 
 --- RECORD  
  TYPE FILA IS RECORD(
    NOMBRE_PRODUCTO PRODUCTS.PRODUCT_NAME%TYPE,
    NOMBRE_CATEGORIA CATEGORIES.CATEGORY_NAME%TYPE,
    ANIO_MODELO PRODUCTS.MODEL_YEAR%TYPE,
    COD_CATEGORIA PRODUCTS.CATEGORY_ID%TYPE
  );
  ---RECORD
  
  --CURSOR
  CURSOR CDATOS_PRODUCTO IS 
  SELECT PRODUCTS.PRODUCT_NAME NOMBRE,
  CATEGORIES.CATEGORY_NAME , 
  PRODUCTS.MODEL_YEAR,
  CATEGORIES.CATEGORY_ID 
  FROM PRODUCTS
  INNER JOIN CATEGORIES
  ON PRODUCTS.CATEGORY_ID = CATEGORIES.CATEGORY_ID;
  -- CURSOR
  
  --- DEFINE UNA VARIABLE DATOS_CURSOR DE TIPO FILA
  DATOS_CURSOR FILA;
  
BEGIN
  
  OPEN CDATOS_PRODUCTO;
  
  LOOP 
    
    FETCH CDATOS_PRODUCTO INTO DATOS_CURSOR;
    
    DBMS_OUTPUT.PUT_LINE('EL  NOMBRE DEL PRODUCTO ES : ' ||DATOS_CURSOR.NOMBRE_PRODUCTO);
    DBMS_OUTPUT.PUT_LINE('EL  ANIO DEL MODELO ES : ' || DATOS_CURSOR.NOMBRE_CATEGORIA);
    DBMS_OUTPUT.PUT_LINE('EL  NOMBRE DE LA CATEGORIA ES : ' || DATOS_CURSOR.ANIO_MODELO);
    DBMS_OUTPUT.PUT_LINE('EL  ID DE LA CATEGORIA ES : ' || DATOS_CURSOR.COD_CATEGORIA);
    DBMS_OUTPUT.PUT_LINE(CHR(13));---CHR SALTO DE LINEA Y EL 13 ES EL CODIGO DE ASKY DEL VALOR CAMBIO DE LINEA
    
    EXIT WHEN CDATOS_PRODUCTO%NOTFOUND;
    
  END LOOP;
  
  CLOSE CDATOS_PRODUCTO;
END;



---- UTILIZANDO BULK COLLECT 

DECLARE

  --- BASICAMENTE UTILIZAMOS ESTE RECORD PARA CUANDO HACEMOS UNA CONSULTA DE VARIAS TABLAS
  --- PERO SI LA CONSULTA LA TRAE LA ESTRUCTURA COMPLETA DE TODOS LOS DATOS QUE NECESITAMOS
  --- ENTONCES SE PUEDE OMITIR EL RECORD Y SOLO UTILIZAMOS TABLE%ROWTYPE;
  TYPE FILA IS RECORD(
    CODIGO_CATEGORIA CATEGORIES.CATEGORY_ID%TYPE,
    NOMBRE_CATEGORIA CATEGORIES.CATEGORY_NAME%TYPE
  );
  
  TYPE TABLA_CATEGORIAS IS TABLE OF FILA INDEX BY PLS_INTEGER;
  
  DATOS_CATEGORIA TABLA_CATEGORIAS;
  
  ITERACION NUMBER(10):=0;
  
BEGIN 

  SELECT CATEGORIES.CATEGORY_ID, CATEGORIES.CATEGORY_NAME BULK COLLECT INTO DATOS_CATEGORIA FROM CATEGORIES;
  DBMS_OUTPUT.put_line('LA CANTIDAD DE REGISTROS ES :' || SQL%ROWCOUNT);
  
  WHILE(ITERACION < SQL%ROWCOUNT) LOOP
    DBMS_OUTPUT.put_line('EL CODIGO DE LA CATEGORIA ES :' || DATOS_CATEGORIA(ITERACION+1).CODIGO_CATEGORIA);
    DBMS_OUTPUT.put_line('EL CODIGO DE LA CATEGORIA ES :' || DATOS_CATEGORIA(ITERACION+1).NOMBRE_CATEGORIA);
  
    ITERACION:= ITERACION +1;
  END LOOP;
END; 


---- ELIMINANDO LA ESTRUCTURA RECORD Y USANDO TABLE%ROWTYPE

DECLARE
  
  TYPE TABLA_CATEGORIAS IS TABLE OF CATEGORIES%ROWTYPE INDEX BY PLS_INTEGER;
  
  DATOS_CATEGORIA TABLA_CATEGORIAS;
  
  ITERACION NUMBER(10):=0;
  
BEGIN 

  SELECT CATEGORIES.CATEGORY_ID, CATEGORIES.CATEGORY_NAME BULK COLLECT INTO DATOS_CATEGORIA FROM CATEGORIES;
  DBMS_OUTPUT.put_line('LA CANTIDAD DE REGISTROS ES :' || SQL%ROWCOUNT);
  
  WHILE(ITERACION < SQL%ROWCOUNT) LOOP
    DBMS_OUTPUT.put_line('EL CODIGO DE LA CATEGORIA ES :' || DATOS_CATEGORIA(ITERACION+1).CATEGORY_ID);
    DBMS_OUTPUT.put_line('EL CODIGO DE LA CATEGORIA ES :' || DATOS_CATEGORIA(ITERACION+1).CATEGORY_NAME);
  
    ITERACION:= ITERACION +1;
  END LOOP;
END; 


--- ARREGLOS ASOCIATIVOS


DECLARE
  TYPE ARREGLO IS TABLE OF VARCHAR2(100) INDEX BY PLS_INTEGER;
  DATOS ARREGLO;
BEGIN
  DATOS(1):='ELEMENTO 1';
  DATOS(2):='ELEMENTO 2';
  DATOS(3):='ELEMENTO 3';
  DATOS(4):='ELEMENTO 4';
  DATOS(5):='ELEMENTO 5';
  DATOS(6):='ELEMENTO 6';
  
  FOR ITERACION IN 1..DATOS.COUNT LOOP 
    DBMS_OUTPUT.PUT_LINE(DATOS(ITERACION));
  END LOOP;
  
  --- RETORNA EL INDICE ANTERIOR AL INDICADO
  DBMS_OUTPUT.PUT_LINE(DATOS.PRIOR(3));
  
  --- RETORNA EL SIGUIENTE INDICE AL INDICADO
  DBMS_OUTPUT.PUT_LINE(DATOS.NEXT(3));
    
  ---- DELETE  
  DATOS.DELETE(1);
  DBMS_OUTPUT.PUT_LINE('CANTIDAD DE REGISTROS :' || DATOS.COUNT);
  
  ---- VARIANTE DE DELETE : DELETE(N,M)  BORRA TODO LO QUE ESTA ENTRE N Y M
  DATOS.DELETE(2,4);
  DBMS_OUTPUT.PUT_LINE('CANTIDAD DE REGISTROS :' || DATOS.COUNT);
END;
